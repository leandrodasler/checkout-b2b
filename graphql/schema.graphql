directive @CheckSchemas on FIELD | FIELD_DEFINITION

scalar CostCenter
scalar InvoiceData
scalar CostCenterDeliveryOptions
scalar UpdatedOrderForm

type UploadedFile {
  filename: String!
  mimetype: String!
  encoding: String!
}

type SavedCart {
  id: ID!
  createdIn: String!
  lastInteractionIn: String!
  title: String!
  email: String!
  orderFormId: String!
  organizationId: String!
  costCenterId: String!
  data: String!
  parentCartId: String
  childrenQuantity: Int
}

type RepresentativeBalanceSettings {
  enabled: Boolean!
  openingBalance: Float
  allowNegativeBalance: Boolean!
}

type AppSettings {
  salesRepresentative: Int!
  salesManager: Int!
  salesAdmin: Int!
  rolesAllowedToSeeMargin: [String]!
  representativeBalance: RepresentativeBalanceSettings!
}

type B2BOrder {
  costId: String!
  costCenterName: String!
  orderGroup: String!
  value: Float!
}

input ItemsUpdatePriceInput {
  index: Int!
  price: Int!
}

type RepresentativeBalance {
  id: ID!
  email: String!
  balance: Float!
  createdIn: String!
  lastInteractionIn: String!
}

type RepresentativeBalanceTransaction {
  id: ID!
  email: String!
  oldBalance: Float!
  newBalance: Float!
  orderGroup: String!
  createdIn: String!
  lastInteractionIn: String!
}

type Query {
  getCart(id: ID!): SavedCart @CheckSchemas

  getSavedCarts(parentCartId: ID): [SavedCart!]! @CheckSchemas

  getAppSettings: AppSettings!

  getRepresentativeBalances: [RepresentativeBalance]! @CheckSchemas

  getRepresentativeBalanceByEmail(email: String): RepresentativeBalance
    @CheckSchemas

  getRepresentativeBalanceTransactions(
    email: String!
    page: Int
    pageSize: Int
    sort: String
  ): [RepresentativeBalanceTransaction]! @CheckSchemas
}

type Mutation {
  uploadSpreadsheet(file: Upload!): UploadedFile!

  saveCart(
    id: ID
    title: String
    additionalData: String
    parentCartId: String
  ): SavedCart! @CheckSchemas

  deleteCart(id: ID): ID @CheckSchemas

  placeOrder(
    poNumber: String
    invoiceData: InvoiceData
    selectedCostCenters: [CostCenter!]!
    defaultCostCenter: CostCenter!
    deliveryOptionsByCostCenter: CostCenterDeliveryOptions!
  ): [B2BOrder!]!

  updatePrices(items: [ItemsUpdatePriceInput]!): UpdatedOrderForm!

  saveRepresentativeBalance(
    email: String
    balance: Float!
    orderGroup: String!
    overwrite: Boolean
  ): RepresentativeBalance! @CheckSchemas

  saveRepresentativeBalanceSettings(
    enabled: Boolean!
    openingBalance: Float
    allowNegativeBalance: Boolean!
  ): RepresentativeBalanceSettings!

  shareCart(
    email: String!
    subject: String!
    title: String!
    linkLabel: String!
    linkHref: String!
    sentByLabel: String!
    userLabel: String!
    sentByName: String!
    sentByEmail: String!
    roleLabel: String!
    sentByRole: String!
    organizationLabel: String!
    sentByOrganization: String!
    costCenterLabel: String!
    sentByCostCenter: String!
    footerLine1: String!
    footerLine2: String!
  ): String!
}
